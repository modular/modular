load("//bazel:api.bzl", "copy_files", "modular_pybind_extension")

package(default_visibility = ["//visibility:public"])

copy_files(
    name = "copy_srcs",
    srcs = [
        "@llvm-project//mlir/python:IRPyFiles",
        "@llvm-project//mlir/python:MlirLibsPyFiles",
    ],
    outs = [
        "_mlir_libs/__init__.py",
        "ir.py",
    ],
)

filegroup(
    name = "py_srcs",
    srcs = glob(["*.py"]) + [
        ":copy_srcs",
    ],
    visibility = ["//visibility:public"],
)

modular_pybind_extension(
    name = "_mlir_libs/_mlir",
    srcs = ["//:pybind_mlir_srcs"],
    # Add max_graph_editable/.libs to RPATH so that the C extension can load
    # dependent shared libs from this package structure:
    # max/
    #   graph/
    #     mlir/
    #       _mlir_libs/
    #         _mlir.cpython-310-aarch64-linux-gnu.so
    # .libs/
    #   libmodular-framework-common.so
    #   libMSupportGlobals.so
    #   and so on.
    linkopts = select({
        "@bazel_tools//src/conditions:darwin": [
            "-Wl,-rpath,@loader_path/../../../../.libs",
        ],
        "//conditions:default": [
            "-Wl,-rpath,$ORIGIN/../../../../.libs",
        ],
    }),
    local_defines = [
        # Set definition used in Interop.h to prefix the MLIR package.
        "MLIR_PYTHON_PACKAGE_PREFIX=max.graph.mlir.",
    ],
    pybind_deps = [
        "//:MLIRBindingsPythonHeaders",
    ],
    deps = [
        "//ModularFramework/tools/mof",
    ],
)
