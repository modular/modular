load("//bazel:api.bzl", "copy_files", "modular_nanobind_extension", "modular_py_library")

package(default_visibility = ["//visibility:public"])

copy_files(
    name = "py_srcs",
    srcs = ["@llvm-project//mlir/python:MlirLibsPyFiles"],
    outs = ["__init__.py"],
)

copy_files(
    name = "_mlir_pyi",
    srcs = ["@llvm-project//mlir/python:IRPyIFiles"],
    outs = [
        "_mlir/__init__.pyi",
        "_mlir/ir.pyi",
    ],
)

modular_py_library(
    name = "_mlir_libs",
    srcs = [":py_srcs"],
    data = [":_mlir_pyi"],
    tags = ["no-mypy"],  # Upstream files with violations
    visibility = ["//visibility:public"],
)

modular_nanobind_extension(
    name = "_mlir",
    srcs = ["//:nanobind_mlir_srcs"],
    local_defines = [
        # Set definition used in Interop.h to prefix the MLIR package.
        "MLIR_PYTHON_PACKAGE_PREFIX=max._mlir.",
    ],
    nanobind_deps = [
        "//:MLIRBindingsPythonHeaders",
    ],
    # Don't lint these files, they're from LLVM.
    tags = ["no-clang-tidy"],
    deps = [
        "//ModularFramework/tools/max",
    ],
)
