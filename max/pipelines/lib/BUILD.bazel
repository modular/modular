load("//bazel:api.bzl", "modular_py_library", "pkg_files", "requirement", "strip_prefix")

package(default_visibility = ["//visibility:public"])

modular_py_library(
    name = "lib",
    srcs = glob(["**/*.py"]),
    imports = ["../../.."],
    visibility = ["//visibility:public"],
    deps = [
        ":xgrammar_if_gpu",
        "//SDK/lib/API/python/max/driver",
        "//SDK/lib/API/python/max/dtype",
        "//SDK/lib/API/python/max/engine",
        "//SDK/lib/API/python/max/nn",
        "//SDK/lib/API/python/max/pipelines/core",
        "//SDK/lib/API/python/max/pipelines/dataprocessing",
        "//SDK/lib/API/python/max/profiler",
        "//SDK/lib/API/python/max/support",
        requirement("aiohttp"),
        requirement("gguf"),
        requirement("hf-transfer"),
        requirement("huggingface-hub"),
        requirement("numpy"),
        requirement("pillow"),
        requirement("torch"),
        requirement("transformers"),
    ],
)

modular_py_library(
    name = "empty",
)

# NOTE: Hack to get around processing deps in the open source repo
alias(
    name = "xgrammar_if_gpu",
    actual = select({
        "//:has_gpu": requirement("xgrammar"),
        "//conditions:default": ":empty",
    }),
)

pkg_files(
    name = "python_files",
    srcs = glob([
        "**/*.py",
    ]),
    prefix = "lib",
    strip_prefix = strip_prefix.from_pkg(""),
    visibility = ["//visibility:public"],
)
